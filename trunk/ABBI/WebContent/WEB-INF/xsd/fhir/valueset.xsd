<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Â© HL7 (http://hl7.org)
  Generated on Wed, Nov 14, 2012 09:38+1100 for FHIR v0.06 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://hl7.org/fhir" xmlns:xhtml="http://www.w3.org/1999/xhtml" targetNamespace="http://hl7.org/fhir" elementFormDefault="qualified" version="0.06">
  <xs:include schemaLocation="fhir-base.xsd"/>
  <xs:element name="ValueSet" type="ValueSet">
    <xs:annotation>
      <xs:documentation>todo</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ValueSet">
    <xs:sequence>
      <xs:element name="name" minOccurs="1" maxOccurs="1" type="string">
        <xs:annotation>
          <xs:documentation>A free text natural language name describing the value set</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="author" type="ValueSet.Author" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Details of the author who accepts responsibility for publishing the value set</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="description" minOccurs="1" maxOccurs="1" type="string">
        <xs:annotation>
          <xs:documentation>A free text natural language description of the value set - contents, reason for definition, conditions of use, etc.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="status" minOccurs="1" maxOccurs="1" type="ValueSetStatus">
        <xs:annotation>
          <xs:documentation>The status of the value set</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="date" minOccurs="1" maxOccurs="1" type="dateTime">
        <xs:annotation>
          <xs:documentation>The date that the value set status was last changed</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="identifier" minOccurs="1" maxOccurs="1" type="id">
        <xs:annotation>
          <xs:documentation>The identifier that is used to identify this value set when it is referenced in a specification, model, design or an instance </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="version" minOccurs="1" maxOccurs="1" type="id">
        <xs:annotation>
          <xs:documentation>The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design, or instance</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="restricts" minOccurs="0" maxOccurs="unbounded" type="uri">
        <xs:annotation>
          <xs:documentation>An assertion that this value set is a restriction on another value set - that it only includes codes that are part of the other value set. The value set itself must ensure that this is true - the contents of the value set are not automatically bounded by the contents of any value set identified here. This allows profile tooling to reason about the relationships between value sets without having to determine the value set contents</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="import" minOccurs="0" maxOccurs="unbounded" type="uri">
        <xs:annotation>
          <xs:documentation>Includes the contents of the referenced value set as part of the contents of this value set</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="include" type="ValueSet.Include" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Include one or more codes from a code system</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="exclude" type="ValueSet.Include" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Exclude one or more codes from the value set</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="extension" type="Extension" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>See Extensions</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="text" type="Narrative" minOccurs="1" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Text summary of resource (for human interpretation)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValueSet.Include">
    <xs:sequence>
      <xs:element name="system" minOccurs="1" maxOccurs="1" type="uri">
        <xs:annotation>
          <xs:documentation>The code system from which the selected codes come from</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="version" minOccurs="0" maxOccurs="1" type="string">
        <xs:annotation>
          <xs:documentation>The version of the code system that the codes are selected from</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="mode" minOccurs="1" maxOccurs="1" type="CodeSelectionMode">
        <xs:annotation>
          <xs:documentation>The mode of selection - whether the code itself, and/or its descendants are being selected </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="code" minOccurs="0" maxOccurs="unbounded" type="code">
        <xs:annotation>
          <xs:documentation>Specifies a code or concept to be included or excluded as specified by the mode from the value set</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="filter" type="ValueSet.Filter" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Select concepts by specify a matching criteria based on the properties defined by the system. If multiple filters are specified, they must all be true</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValueSet.Author">
    <xs:sequence>
      <xs:element name="name" minOccurs="1" maxOccurs="1" type="string">
        <xs:annotation>
          <xs:documentation>The name of the author</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reference" minOccurs="0" maxOccurs="1" type="uri">
        <xs:annotation>
          <xs:documentation>Some way of reaching or finding the author.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValueSet.Filter">
    <xs:sequence>
      <xs:element name="property" minOccurs="1" maxOccurs="1" type="code">
        <xs:annotation>
          <xs:documentation>A code that identifies a property defined in the code system</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="op" minOccurs="1" maxOccurs="1" type="FilterOperator">
        <xs:annotation>
          <xs:documentation>The kind of operation to perform as part of the filter criteria</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="value" minOccurs="1" maxOccurs="1" type="code">
        <xs:annotation>
          <xs:documentation>The match value may be either a code defined by the system, or a string value which is used a regex match on the literal string of the property value</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CodeSelectionMode">
    <xs:simpleContent>
      <xs:restriction base="code">
        <xs:enumeration value="code">
          <xs:annotation>
            <xs:documentation>Only this code is selected</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="children">
          <xs:annotation>
            <xs:documentation>Only the immediate children (codes with a is_a relationship) are selected, but not this code itself</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="descendants">
          <xs:annotation>
            <xs:documentation>All descendants of this code are selected, but not this code itself</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="all">
          <xs:annotation>
            <xs:documentation>This code and any descendants are selected</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ValueSetStatus">
    <xs:simpleContent>
      <xs:restriction base="code">
        <xs:enumeration value="draft">
          <xs:annotation>
            <xs:documentation>This valueset is still under development</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="testing">
          <xs:annotation>
            <xs:documentation>This valueset was authored for testing purposes (or education/evaluation/evangelisation)</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="production">
          <xs:annotation>
            <xs:documentation>This valueset is ready for use in production systems</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="withdrawn">
          <xs:annotation>
            <xs:documentation>This valueset should no longer be used</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="superseded">
          <xs:annotation>
            <xs:documentation>This valueset has been replaced and a different valueset should be used in its place</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="FilterOperator">
    <xs:simpleContent>
      <xs:restriction base="code">
        <xs:enumeration value="=">
          <xs:annotation>
            <xs:documentation>The property value has the concept specified by the value</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="is_a">
          <xs:annotation>
            <xs:documentation>The property value has a concept that has an is_a relationship with the value</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="is_not_a">
          <xs:annotation>
            <xs:documentation>The property value has a concept that does not have an is_a relationship with the value</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
        <xs:enumeration value="regex">
          <xs:annotation>
            <xs:documentation>The property value representation matches the regex specified in the value</xs:documentation>
          </xs:annotation>
        </xs:enumeration>
      </xs:restriction>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>
